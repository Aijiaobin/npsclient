name: Update NPC Files

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-npc:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up tools
      run: |
        sudo apt-get update
        sudo apt-get install -y wget tar jq

    - name: Get latest version from djylb/nps
      run: |
        latest_version=$(curl --silent "https://api.github.com/repos/djylb/nps/releases/latest" | jq -r .tag_name)
        echo "Latest version: $latest_version"
        echo "LATEST_VERSION=$latest_version" >> $GITHUB_ENV

    - name: Check if update is needed
      run: |
        # Extract current version from build.gradle.kts
        current_version=$(grep -oP 'buildConfigField\("String", "NpsVersion", "\K[0-9\.]+' app/build.gradle.kts)
        echo "Current version from build.gradle.kts: $current_version"

        # Strip the 'v' from latest_version if it exists
        latest_version_no_v=$(echo "$LATEST_VERSION" | sed 's/^v//')
        echo "Latest version: $latest_version_no_v"

        if [ "$current_version" == "$latest_version_no_v" ]; then
          echo "No update needed. The latest version is already installed."
          exit 0
        else
          echo "Update needed. Proceeding with update."
        fi

    - name: Update version in build.gradle.kts
      run: |
        # Increment versionCode and versionName in build.gradle.kts
        version_code=$(grep -oP 'versionCode = \K[0-9]+' app/build.gradle.kts)
        version_name=$(grep -oP 'versionName = "\K[0-9\.]+' app/build.gradle.kts)

        new_version_code=$((version_code + 1))
        new_version_name=$(echo $version_name | awk -F. '{$NF++; OFS="."; print}')


        # Update build.gradle.kts with new version
        sed -i "s/versionCode = $version_code/versionCode = $new_version_code/" app/build.gradle.kts
        sed -i "s/versionName = \"$version_name\"/versionName = \"$new_version_name\"/" app/build.gradle.kts
        sed -i "s/buildConfigField(\"String\", \"NpsVersion\", \".*\")/buildConfigField(\"String\", \"NpsVersion\", \"$LATEST_VERSION\")/" app/build.gradle.kts

    - name: Download NPC client binaries
      run: |
        wget https://github.com/djylb/nps/releases/latest/download/linux_arm_v7_client.tar.gz -O linux_arm_v7_client.tar.gz
        wget https://github.com/djylb/nps/releases/latest/download/android_arm64_client.tar.gz -O android_arm64_client.tar.gz
        wget https://github.com/djylb/nps/releases/latest/download/linux_amd64_client.tar.gz -O linux_amd64_client.tar.gz

    - name: Extract and rename NPC files
      run: |
        mkdir -p app/src/main/jniLibs/armeabi-v7a
        mkdir -p app/src/main/jniLibs/arm64-v8a
        mkdir -p app/src/main/jniLibs/x86_64

        tar -xzf linux_arm_v7_client.tar.gz -C app/src/main/jniLibs/armeabi-v7a npc
        tar -xzf android_arm64_client.tar.gz -C app/src/main/jniLibs/arm64-v8a npc
        tar -xzf linux_amd64_client.tar.gz -C app/src/main/jniLibs/x86_64 npc

        mv app/src/main/jniLibs/armeabi-v7a/npc app/src/main/jniLibs/armeabi-v7a/libnpc.so
        mv app/src/main/jniLibs/arm64-v8a/npc app/src/main/jniLibs/arm64-v8a/libnpc.so
        mv app/src/main/jniLibs/x86_64/npc app/src/main/jniLibs/x86_64/libnpc.so

    - name: Commit and push changes
      run: |
        git config --global user.name "djylb"
        git config --global user.email "duan@d-jy.net"
        git add app/src/main/jniLibs/*

        if git diff --cached --quiet; then
          echo "No changes detected, skipping commit."
          exit 0
        else
          git commit -m "Update NPC to v$LATEST_VERSION"
          git push origin main
        fi
